动态内存和类
静态声明:
1.在类中声明一个静态变量，那么类所创建的所有对象所用的这个静态变量都是同一个变量
这个变量不属于任何一个对象，即它所在的内存空间不在某个对象所在的空间中，单独在内存的某个单元中开辟所需空间

类中变量的初始化:
1.一般变量初始化通过相关的方法函数去初始化，不要在类的声明中初始化导致出错
2.静态变量也是一样，在类的方法文件中去初始化。
3.但是静态成员如果是整型或者枚举型的const则可以在类声明中初始化

额外补充
1.头文件<cstring>包含了strlen库函数
2.strcpy函数(目标，源)

本节课重点：复制构造函数
例子：
假设有一个类StringBad
此时StringBad sailor =sports,这里代表将sports这个对象赋值给sailor
这时这段语句代表StringBad sailor=StringBad(sports)
这里将sports作为参数传递到了StringBad这个构造函数中，但是创建的构造函数参数只包含const char *类型
不包括类的对象本身，所以一定会出错，但是编译器根据该种错误作出创建复制构造函数的举动，通过复制构造
函数去使得sailor得到了sports中包含的值，但是这个例子中出现了一个问题，该问题为：你通过类创建的自带的构造
函数开辟了一次内存空间，但是复制构造函数并没有和你创建的构造函数相同的功能，但是却包含了释放内存空间的
析构函数，所以相当于没有开辟内存空间却释放了内存空间导致编译器出错。